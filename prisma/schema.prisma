generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model completed_modules {
  id           Int       @id @default(autoincrement())
  user_uid     String?
  module_id    Int?
  completed_at DateTime? @default(now()) @db.Timestamp(6)
  modules      modules?  @relation(fields: [module_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users        users?    @relation(fields: [user_uid], references: [uid], onDelete: NoAction, onUpdate: NoAction)

  @@unique([user_uid, module_id])
}

model courses {
  id                Int           @id @default(autoincrement())
  title             String?       @db.VarChar(255)
  description       String?
  thumbnail         String?
  price             Decimal?      @db.Decimal(10, 2)
  instructor        String?       @db.VarChar(100)
  instructor_role   String?       @db.VarChar(100)
  instructor_avatar String?
  duration          String?       @db.VarChar(50)
  published         DateTime?     @db.Date
  level             String?       @db.VarChar(100)
  preview_video     String?
  enrollments       enrollments[]
  modules           modules[]
}

model enrollments {
  id          Int       @id @default(autoincrement())
  user_uid    String?
  course_id   Int?
  enrolled_at DateTime? @default(now()) @db.Timestamp(6)
  courses     courses?  @relation(fields: [course_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users       users?    @relation(fields: [user_uid], references: [uid], onDelete: NoAction, onUpdate: NoAction)

  @@unique([user_uid, course_id])
}

model modules {
  id                Int                 @id @default(autoincrement())
  course_id         Int?
  title             String?             @db.VarChar(255)
  completed_modules completed_modules[]
  courses           courses?            @relation(fields: [course_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  videos            videos[]
}

model users {
  uid               String              @id
  phone             String?             @db.VarChar(20)
  name              String?             @db.VarChar(100)
  role              String?             @db.VarChar(50)
  mobile            Boolean?            @default(false)
  pc                Boolean?            @default(false)
  mobile_address    String?             @db.VarChar(255)
  pc_address        String?             @db.VarChar(255)
  completed_modules completed_modules[]
  enrollments       enrollments[]
}

model videos {
  id         Int      @id @default(autoincrement())
  module_id  Int?
  title      String?  @db.VarChar(255)
  duration   String?  @db.VarChar(20)
  is_preview Boolean? @default(false)
  link       String?  @db.VarChar(50)
  modules    modules? @relation(fields: [module_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
